---
title: Choc 
layout: default
---
%script{:src => "/scripts/choc/two-annotations.js"}
%link{:href => "/styles/joyride/joyride-2.1.css", :rel => "stylesheet"}/
%script{:src => "/scripts/vendor/jquery.joyride-2.1.js"}
%script{:src => "/scripts/examples/parabola-client.js"}
%script{:src => "/scripts/examples/parabola-client-timeline.js"}
%script{:src => "/scripts/examples/triangle-fan-timeline.js"}
%script{:src => "/scripts/examples/bouncing-ball.js"}

%header
  .row
    .large-6.columns.title-container
      %h1#title 
        Choc
      #subtitle
        Traceable programming
    .large-6.columns.description
      %p
        Choc is a tool for thinking powerful thoughts by stepping through code.
        It is an implementation of several ideas found in Bret Victor's 
        %span.proper
          %a{:href => "http://worrydream.com/LearnableProgramming/"}
            Learnable Programming.

.row
  .large-12.large-centered.columns
    %h2
      Demo 1 — 
      %b
        Show each step

    .choc-wrapper
      .canvas-container.x-canvas
        #parabola-canvas
      #choc-editor-for-parabola.canvas-editor

.row
  .large-1.columns
    &nbsp;
  .large-10.columns
    %p
      Computers affect the way people think and learn. We can use computers to enhance thinking and change patterns of access to knowledge. 

    %p 
      Choc is a toolkit designed to help teachers craft small demos that students can explore interactively. 

    %p
      Thinking procedurally is one of the hardest concepts to grasp for the beginning programmer.

    %p
      Choc is different from other "live-coding" environments in that each step of the execution is controled by the learner.

    %p

      Choc is a tool-to-think-with. 
      Build new intellectual structures

      Code is often pasted into web-pages and this provides us no advantages over paper on a page. 
      Choc provides a framework to use the computer to teach algorithms in a way that no book can.

      Choc encourages exploration and reflection

      Many people who become programmers do so because they have an aptitute to holding complex weaves of procedures in their mind. There are currently very poor tools for helping people grow the aptitute to think procedurally.

      
      Choc aims to augment what is learnable and teachable.

      Choc aims to help draw pathways between action-ways-of-knowing and symbolic-ways-of-knowing.
      Acquire action-knowledge by toying with the elements of an idea.

      Export the properties of a chosen microhold. Hopefully as one learns to explore the properties of a microworld, they'll learn to transfer habits of exploration into the rest of their lives.

      Gives you the ability to explore ideas without a bug being "wrong", bad or a mistake


    %p 
      How to create your own examples
      Choc examples should be created in mind-sized bites.

      getting to know an idea, exploring an area of knowledge, and acquiring sensitivity to distinctions that seem ungraspably subtle 


      Propositional content of programming is important, but it's only a part of a programmer's body of knowledge. We're also interested in knowledge that is more qualitative, less completely specified, and seldom stated in propositional form.

      In everyday life procedures are lived and used, they are not necessarily reflected on. a procedure becomes a thing that is named, manipulated, and recognized as the children come to acquire the idea of procedure.

      By showing how the structure of a program can be decomposed into simpler, but still meaningful and coherant,structures, we're able to show a pathway into how an algorithm works.

      In our culture number is richly represented, systematic procedure is poorly represented.

  .large-1.columns
    &nbsp;

.row
  .large-12.large-centered.columns
    %h2
      Demo 1 — 
      %b
        Make the flow visible

    .choc-wrapper
      .canvas-container.x-canvas
        #parabola-timeline-canvas
      #choc-editor-for-parabola-with-timeline.canvas-editor

.row
  .large-1.columns
    &nbsp;
  .large-10.columns
    %p
      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
  .large-1.columns
    &nbsp;


.row
  .large-12.columns
    %h2
      Demo 3 — 
      %b
        Show the state

    .choc-wrapper
      .canvas-container
        #triangle-fan-2-canvas
      #choc-editor-for-triangle-fan-2.canvas-editor

.row
  .large-1.columns
    &nbsp;
  .large-10.columns
    %p
      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
  .large-1.columns
    &nbsp;


.row
  .large-12.columns
    %h2
      Demo 4 — 
      %b
        Make time tangible

    .choc-wrapper
      .canvas-container
        .canvas-wrapper
          #frameCanvas
          #fader
          #previewCanvas

      #choc-editor-for-bouncing-ball.canvas-editor

.row
  .large-1.columns
    &nbsp;
  .large-10.columns
    %p
      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
  .large-1.columns
    &nbsp;


.row
  .large-12.columns
    %h2
      Demo 5 — 
      %b
        A B C

    -# http://fgnass.github.io/spin.js/#?lines=13&length=40&width=10&radius=12&corners=1.0&rotate=0&trail=76&speed=1.2&direction=1&hwaccel=on

    %img{:src => "/images/voxel-preload-play.png"}
    .choc-wrapper
      .canvas-container
        #game
      #choc-editor-for-voxel.canvas-editor

.row
  .large-1.columns
    &nbsp;
  .large-10.columns
    %p
      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
  .large-1.columns
    &nbsp;


.row
  .large-1.columns
    &nbsp;
  .large-10.columns
    %p
      Installation instructions
  .large-1.columns
    &nbsp;


.row
  .large-1.columns
    &nbsp;
  .large-10.columns
    %p
      Made by Nate Murray & Ari Lerner in San Francisco - Fullstack.io

  .large-1.columns
    &nbsp;



.row
  .large-1.columns
    &nbsp;
  .large-10.columns
    %p
      %tt
        Choc
      aims to help learners gain a deep insight into how a program 
      %em
        runs
      by
      %em 
        providing human descriptions of each line of code that runs,
      %em
        making the flow tangible by allowing you to scrub through each step
      %em 
        making the flow visible by xxx
      %em
        showing the data of each line of code 

    %p

  .large-1.columns
    &nbsp;

.row
  .large-12.large-centered.columns
    #messages

/* Tour
%ol#tourGuide
  %li{:'data-tour' => 'slider'} Slide here
  %li{:'data-tour' => 'editor'} Edit here
  %li{:'data-tour' => 'canvas'} See result here

%script{:src => "/scripts/index/tour.js"}

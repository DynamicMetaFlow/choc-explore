// Generated by CoffeeScript 1.6.2
(function() {
  var ChocGame, createGame, createTree, defaultSetup, extend, fly, highlight, player, texturePath, voxel, walk;

  createGame = require("voxel-engine");

  highlight = require("voxel-highlight");

  player = require("voxel-player");

  voxel = require("voxel");

  extend = require("extend");

  fly = require("voxel-fly");

  walk = require("voxel-walk");

  texturePath = require('painterly-textures');

  createTree = require("voxel-forest");

  defaultSetup = function(game, avatar) {
    var blockPosErase, blockPosPlace, currentMaterial, hl, makeFly, target;

    makeFly = fly(game);
    target = game.controls.target();
    game.flyer = makeFly(target);
    blockPosPlace = void 0;
    blockPosErase = void 0;
    hl = game.highlighter = highlight(game, {
      color: 0xff0000
    });
    hl.on("highlight", function(voxelPos) {
      return blockPosErase = voxelPos;
    });
    hl.on("remove", function(voxelPos) {
      return blockPosErase = null;
    });
    hl.on("highlight-adjacent", function(voxelPos) {
      return blockPosPlace = voxelPos;
    });
    hl.on("remove-adjacent", function(voxelPos) {
      return blockPosPlace = null;
    });
    window.addEventListener("keydown", function(ev) {
      if (ev.keyCode === "R".charCodeAt(0)) {
        return avatar.toggle();
      }
    });
    currentMaterial = 1;
    game.on("fire", function(target, state) {
      var position;

      position = blockPosPlace;
      if (position) {
        return game.createBlock(position, currentMaterial);
      } else {
        position = blockPosErase;
        if (position) {
          return game.setBlock(position, 0);
        }
      }
    });
    return game.on("tick", function() {
      var vx, vz;

      walk.render(target.playerSkin);
      vx = Math.abs(target.velocity.x);
      vz = Math.abs(target.velocity.z);
      if (vx > 0.001 || vz > 0.001) {
        return walk.stopWalking();
      } else {
        return walk.startWalking();
      }
    });
  };

  ChocGame = function(opts, setup) {
    var avatar, container, createPlayer, defaults, game;

    setup = setup || defaultSetup;
    defaults = {
      generate: function(x, y, z) {
        if (y < 14) {
          return 1;
        } else {
          return 0;
        }
      },
      chunkDistance: 2,
      materials: [['grass', 'dirt', 'grass_dirt'], 'brick', 'dirt', 'leaves_opaque', 'tree_side'],
      materialFlatColor: false,
      texturePath: "/images/textures/",
      worldOrigin: [0, 0, 0],
      controls: {
        discreteFire: true
      }
    };
    opts = extend({}, defaults, opts || {});
    game = createGame(opts);
    container = opts.container || document.body;
    window.game = game;
    game.appendTo(container);
    if (game.notCapable()) {
      return game;
    }
    createPlayer = player(game);
    avatar = createPlayer(opts.playerSkin || "/node_modules/voxel-player/example/static/substack.png");
    avatar.possess();
    avatar.yaw.position.set(2, 14, 4);
    setup(game, avatar);
    window.avatar = avatar;
    return game;
  };

  module.exports = ChocGame;

  $(document).ready(function() {
    var container, game;

    container = document.getElementById("game");
    game = ChocGame({
      container: container
    });
    return createTree(game, {
      position: {
        x: 0,
        y: 14,
        z: 0
      },
      bark: 5,
      leaves: 4
    });
  });

  window.createTree = createTree;

  window.game = game;

}).call(this);

extends layout

block scripts

block content
  :coffeescript
    $(document).ready () ->
      parabola = """
        var shift = 0;
        while (shift <= 200) {
          pad.makeLine(shift, 0, 200, shift);
          shift += 14;
        }
      """

      boilerplate = (drawCode) -> """
        two = pad;

        // two has convenience methods to create shapes.
        var circle = two.makeCircle(72, 100, 50);
        var rect = two.makeRectangle(213, 100, 100, 100);

        // The object returned has many stylable properties:
        circle.fill = '#FF8000';
        circle.stroke = 'orangered'; // Accepts all valid css color
        circle.linewidth = 5;

        rect.fill = 'rgb(0, 200, 255)';
        rect.opacity = 0.75;
        rect.noStroke();
        pad.update();
      """

      pad = new Two({ 
        width: 200
        height: 200 
        type: Two.Types.canvas
        })
        .appendTo(document.getElementById('targetcanvas'))
      two = pad

      # two has convenience methods to create shapes.
      circle = two.makeCircle(72, 100, 50)
      rect = two.makeRectangle(213, 100, 100, 100)

      # The object returned has many stylable properties:
      circle.fill = "#FF8000"
      circle.stroke = "orangered" # Accepts all valid css color
      circle.linewidth = 5
      rect.fill = "rgb(0, 200, 255)"
      rect.opacity = 0.75
      rect.noStroke()

      pad.update();  

      delay = null
      editor = CodeMirror $("#editor")[0], {
        value: parabola
        mode:  "javascript"
        viewportMargin: Infinity
        tabMode: "spaces"
        }
      editor.on "change", () ->
        clearTimeout(delay)
        delay = setTimeout(updatePreview, 300)

      sourceRewrite = () ->
        options = 
          comment: true
          format:
            quotes: "double"
            indent:
              style: "  "

        try
          code = editor.getValue()
          syntax = window.esprima.parse(code, raw: true, tokens: true, range: true, comment: true)
          syntax = window.escodegen.attachComments(syntax, syntax.comments, syntax.tokens)
          code = window.escodegen.generate(syntax, options)
          editor.setValue code
          $("#messages").text("")
        catch e
          console.log(e)
          $("#messages").text(e.toString())

      updatePreview = () ->
        drawCode = boilerplate(editor.getValue())
        try
          # `eval(drawCode)`
          $("#messages").text("")
        catch e
          console.log(e)
          $("#messages").text(e.toString())

      setTimeout(updatePreview, 300)


  div(class="row")
    div(class="large-12 large-centered columns")
      div(class="row")
        div(class="large-10 columns")
          h1#title
            = title 

        div(class="large-2 columns top-buttons")
          .run

    div(class="large-12 large-centered columns")
      div(class="row")
        div(class="large-6 columns")
          #editor

        div(class="large-6 columns x-canvas")
          #targetcanvas

  div(class="row")
    div(class="large-12 large-centered columns")
      #messages
 

